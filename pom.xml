<?xml version="1.0" encoding="UTF-8"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.tinylog</groupId>
	<artifactId>parent</artifactId>
	<version>1.2-alpha-2</version>
	<packaging>pom</packaging>
	<url>${website.url}</url>

	<modules>
		<module>jcl-binding</module>
		<module>log4j-facade</module>
		<module>slf4j-binding</module>
		<module>tinylog-core</module>
		<module>tinylog</module>
		<module>tinylog-jboss</module>
	</modules>

	<prerequisites>
		<maven>3.1.1</maven>
	</prerequisites>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- tinylog requires Java 1.5, but Java 1.7 is defined here due to limitations of Eclipse -->
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>

		<!-- Tests require Java 1.7 -->
		<maven.compiler.testSource>1.7</maven.compiler.testSource>
		<maven.compiler.testTarget>1.7</maven.compiler.testTarget>

		<bootclasspath>${java.home}/lib/rt.jar</bootclasspath>

		<jcl.version>[1.2,1.3)</jcl.version>
		<slf4j.version>[1.6,1.8)</slf4j.version>
		<junit.version>4.12</junit.version>
		<hamcrest.version>1.3</hamcrest.version>
		<jmockit.version>1.27</jmockit.version>
		<h2.version>1.4.192</h2.version>

		<maven-clean-plugin.version>3.0.0</maven-clean-plugin.version>
		<maven-compiler-plugin.version>3.5.1</maven-compiler-plugin.version>
		<maven-checkstyle-plugin.version>2.17</maven-checkstyle-plugin.version>
		<findbugs-maven-plugin.version>3.0.4</findbugs-maven-plugin.version>
		<jacoco-maven-plugin.version>0.7.7.201606060606</jacoco-maven-plugin.version>
		<maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
		<maven-jar-plugin.version>3.0.2</maven-jar-plugin.version>
		<maven-source-plugin.version>3.0.1</maven-source-plugin.version>
		<maven-javadoc-plugin.version>2.10.4</maven-javadoc-plugin.version>
		<maven-bundle-plugin.version>3.2.0</maven-bundle-plugin.version>
		<build-helper-maven-plugin.version>1.12</build-helper-maven-plugin.version>
		<maven-shade-plugin.version>2.4.3</maven-shade-plugin.version>
		<maven-assembly-plugin.version>2.6</maven-assembly-plugin.version>
		<flatten-maven-plugin.version>1.0.0</flatten-maven-plugin.version>

		<!-- Avoid inlining, because it breaks mocks -->
		<argLine>-XX:-Inline</argLine>

		<website.url>http://www.tinylog.org/</website.url>
		<git.url>https://github.com/pmwmedia/tinylog</git.url>
		<git.connection>scm:git:github.com/pmwmedia/tinylog.git</git.connection>
		<git.developerConnection>scm:git:git@github.com:pmwmedia/tinylog.git</git.developerConnection>
	</properties>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<organization>
		<name>PMW Media</name>
	</organization>

	<developers>
		<developer>
			<name>Martin Winandy</name>
			<email>martin.winandy@tinylog.org</email>
		</developer>
	</developers>

	<scm>
		<url>${git.url}</url>
		<connection>${git.connection}</connection>
		<developerConnection>${git.developerConnection}</developerConnection>
	</scm>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/pmwmedia/tinylog/issues</url>
	</issueManagement>

	<build>

		<sourceDirectory>src</sourceDirectory>
		<testSourceDirectory>test</testSourceDirectory>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>${maven-clean-plugin.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<executions>
					<execution>
						<id>default-compile</id>
						<configuration>
							<debuglevel>lines</debuglevel>
							<compilerArguments>
								<bootclasspath>${bootclasspath}</bootclasspath>
							</compilerArguments>
						</configuration>
					</execution>
					<execution>
						<id>default-testCompile</id>
						<configuration>
							<debuglevel>lines,vars,source</debuglevel>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven-checkstyle-plugin.version}</version>
				<configuration>
					<consoleOutput>true</consoleOutput>
					<configLocation>${project.parent.basedir}/configuration/tinylog-checkstyle.xml</configLocation>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>${findbugs-maven-plugin.version}</version>
				<configuration>
					<excludeFilterFile>${project.parent.basedir}/configuration/tinylog-findbugs.xml</excludeFilterFile>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<executions>
					<execution>
						<phase>process-test-resources</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven-jar-plugin.version}</version>
				<configuration>
					<archive>
						<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
						<manifestEntries>
							<Built-By>${project.organization.name}</Built-By>
						</manifestEntries>
						<addMavenDescriptor>false</addMavenDescriptor>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>${maven-bundle-plugin.version}</version>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Bundle-SymbolicName>org.pmw.${project.artifactId};singleton:=true</Bundle-SymbolicName>
					</instructions>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>manifest</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${build-helper-maven-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>parse-version</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven-source-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<archive>
						<manifestEntries>
							<Built-By>${project.organization.name}</Built-By>
							<Bundle-ManifestVersion>2</Bundle-ManifestVersion>
							<Bundle-Name>${project.name}</Bundle-Name>
							<Bundle-SymbolicName>org.pmw.${project.artifactId}.source</Bundle-SymbolicName>
							<Bundle-Vendor>${project.organization.name}</Bundle-Vendor>
							<Bundle-Version>${parsedVersion.osgiVersion}</Bundle-Version>
							<Eclipse-SourceBundle>org.pmw.${project.artifactId};version="${parsedVersion.osgiVersion}";roots:="."</Eclipse-SourceBundle>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<archive>
						<manifestEntries>
							<Built-By>${project.organization.name}</Built-By>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>${maven-shade-plugin.version}</version>
				<configuration>
					<finalName>${project.artifactId}-${project.version}</finalName>
					<createSourcesJar>true</createSourcesJar>
					<shadeSourcesContent>true</shadeSourcesContent>
					<dependencyReducedPomLocation>${project.build.directory}/.shaded-pom.xml</dependencyReducedPomLocation>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${maven-assembly-plugin.version}</version>
				<configuration>
					<appendAssemblyId>false</appendAssemblyId>
					<outputDirectory>${project.parent.build.directory}</outputDirectory>
					<descriptor>${project.parent.basedir}/distribution.xml</descriptor>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<version>${flatten-maven-plugin.version}</version>
				<configuration>
					<outputDirectory>${project.build.directory}</outputDirectory>
					<flattenMode>oss</flattenMode>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>

</project>
